// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(StorageContext))]
    [Migration("20181211084132_StorageInitalize")]
    partial class StorageInitalize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Component", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("Core.Entities.Storage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ComponentId");

                    b.Property<DateTime>("Created");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("Piece");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.ToTable("Storages");
                });

            modelBuilder.Entity("Core.Entities.Storage", b =>
                {
                    b.HasOne("Core.Entities.Component", "Component")
                        .WithMany()
                        .HasForeignKey("ComponentId");
                });
#pragma warning restore 612, 618
        }
    }
}
